[{"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\index.js":"1","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\App.js":"2","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\store.js":"3","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\reportWebVitals.js":"4","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Footer.js":"5","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Header.js":"6","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\screens\\CartPage.js":"7","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\screens\\ProductPage.js":"8","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\screens\\LoginPage.js":"9","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\screens\\HomePage.js":"10","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\reducers\\productReducers.js":"11","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\reducers\\cartReducers.js":"12","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\product.js":"13","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Message.js":"14","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Loader.js":"15","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Product.js":"16","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\actions\\productActions.js":"17","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\actions\\cartActions.js":"18","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\constants\\cartConstants.js":"19","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\constants\\productConstants.js":"20"},{"size":569,"mtime":1630958456842,"results":"21","hashOfConfig":"22"},{"size":952,"mtime":1634750430355,"results":"23","hashOfConfig":"22"},{"size":838,"mtime":1631137688295,"results":"24","hashOfConfig":"22"},{"size":362,"mtime":1630445316655,"results":"25","hashOfConfig":"22"},{"size":378,"mtime":1630457889236,"results":"26","hashOfConfig":"22"},{"size":1829,"mtime":1631232671631,"results":"27","hashOfConfig":"22"},{"size":7806,"mtime":1631232240899,"results":"28","hashOfConfig":"22"},{"size":5887,"mtime":1630971929623,"results":"29","hashOfConfig":"22"},{"size":164,"mtime":1631232591344,"results":"30","hashOfConfig":"22"},{"size":3059,"mtime":1630971065161,"results":"31","hashOfConfig":"22"},{"size":1104,"mtime":1630966083717,"results":"32","hashOfConfig":"22"},{"size":1282,"mtime":1631215482541,"results":"33","hashOfConfig":"22"},{"size":2031,"mtime":1630686799094,"results":"34","hashOfConfig":"22"},{"size":239,"mtime":1630971026303,"results":"35","hashOfConfig":"22"},{"size":442,"mtime":1630970942362,"results":"36","hashOfConfig":"22"},{"size":1135,"mtime":1630631742714,"results":"37","hashOfConfig":"22"},{"size":1375,"mtime":1630971521528,"results":"38","hashOfConfig":"22"},{"size":893,"mtime":1631211420276,"results":"39","hashOfConfig":"22"},{"size":98,"mtime":1630972134079,"results":"40","hashOfConfig":"22"},{"size":366,"mtime":1630965485563,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pjcalf",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\index.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\App.js",["88"],"import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { HomePage } from './screens/HomePage';\nimport { ProductPage } from './screens/ProductPage';\nimport { CartPage } from './screens/CartPage';\nimport LoginPage from './screens/LoginPage';\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='main'>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/product/:id' component={ProductPage} />\n          <Route path='/cart/:id?' component={CartPage} />\n          <Route path='/login' component={LoginPage} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\store.js",["89"],"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst inititalState = {\r\n    cart : { cartItems: cartItemsFromStorage }\r\n};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, inititalState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\reportWebVitals.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Footer.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Header.js",["90","91"],"import React from 'react';\r\nimport { Navbar, Nav, Container, Col, Row, NavDropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <Navbar className='py-3' bg=\"success\" variant=\"dark\" expand=\"sm\" sticky=\"top\">\r\n                <Container className='ms-10'>\r\n                    <Col sm={3}>\r\n                        <Link to='/' style={{textDecoration: \"none\"}}>   \r\n                            <Navbar.Brand className='nav-brand'>ArchHealthy</Navbar.Brand>\r\n                        </Link> \r\n                    </Col>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Col sm={9}>\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className='nav-subsections'>\r\n                            <Col className=\"nav-option\" xs={2}>\r\n                                <Nav.Link  href=\"#home\"><span>Best Offers</span></Nav.Link>\r\n                            </Col>\r\n                            <Col className=\"nav-option\" xs={2}>\r\n                                <Nav.Link href=\"#link\"><span>Your orders</span></Nav.Link>\r\n                            </Col>\r\n                            <Col className=\"nav-option\" xs={2}>\r\n                                <Nav.Link href=\"/cart\"><span>Cart</span></Nav.Link>\r\n                            </Col>\r\n                            <Col className=\"nav-option\" xs={6}>\r\n                                <Nav.Link href=\"/login\"><span>Login</span></Nav.Link>\r\n                            </Col>\r\n                        </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Col>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\screens\\CartPage.js",["92","93"],"import React, {useState, useEffect} from 'react';\r\nimport { Container, Button, Row, Col, ListGroup, Image, Form } from 'react-bootstrap';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport products from '../product';\r\nimport './CartPage.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeCartItem } from '../actions/cartActions';\r\n\r\nexport function CartPage({ match, location, history}) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const cartItems = cart.cartItems;\r\n    console.log('cartItems:', cartItems)\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Container className='mt-5 product-display-container'>\r\n            <Row>\r\n                <Col>\r\n                    <h1>Your Cart</h1>\r\n                </Col>\r\n\r\n                <Col style={{'textAlign': 'right'}} className='me-5'>\r\n                    <Button variant='outline-success' href='/'>Home</Button>\r\n                </Col>\r\n\r\n                \r\n            </Row>\r\n\r\n            {cartItems.length === 0 ? (\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Message error=\"Your cart is empty\"></Message>\r\n                </Col>\r\n            </Row>) :\r\n            (\r\n                <Row className='mt-5'>\r\n                <Col xs={7} className='ms-5'>\r\n                    {cartItems.map(product => (\r\n                    <Row className='mt-5' key={product.product}>\r\n                        <Col xs={3}>\r\n                            <Image src={`http://127.0.0.1:8000${product.image}`} className='cart-product-img'></Image>\r\n                        </Col>\r\n\r\n                        <Col xs={7}>\r\n                            <Row>\r\n                                <h2>{product.name}</h2>\r\n                            </Row>\r\n\r\n                            <Row className='mt-3 cart-price-text'>\r\n                                <Col>\r\n                                    Price:\r\n                                </Col>\r\n                                <Col>\r\n                                    ${product.price}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className='mt-1'>\r\n                                <p>{product.countInStock > 0 ? \"In Stock\": \"Out of stock\"}</p>\r\n                            </Row>\r\n\r\n                            <Row className='mt-1'>\r\n                                <Col xs={4}>\r\n                                    <Form.Control\r\n                                        id=\"qty-field\"\r\n                                        as=\"select\"\r\n                                        placeholder=\"Quantity\"\r\n                                        value={product.qty}\r\n                                        onChange={async (e)=>{await dispatch(addToCart(product.product, Number(e.target.value)))}}\r\n                                    >\r\n                                        {\r\n                                            [...Array(product.countInStock).keys()].map((x) => (\r\n                                                <option key={x+1} value={x+1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n\r\n                        <Col xs={2}>\r\n                            <DeleteIcon \r\n                                color='action' \r\n                                fontSize='large' \r\n                                className='delete-icon'\r\n                                onClick={() => {dispatch(removeCartItem(product.product))}}\r\n                                ></DeleteIcon>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    ))}\r\n                </Col>\r\n\r\n                <Col xs={4}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <h1>Subtotal</h1>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <h2>${cartItems.reduce((priceSum, item) => priceSum + item.price * item.qty, 0)}</h2>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <p>Free shipping to V8N3R9, arrive on Thu Sep 21, 2021</p>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                variant='dark' \r\n                                size='lg' \r\n                                className='w-100 h-100'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                                >Proceed to Checkout</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            )\r\n            }\r\n\r\n            \r\n        \r\n        </Container>\r\n    )\r\n}\r\n\r\n/*\r\n<Col xs={7} className='ms-5'>\r\n                    {productsInCart.map(product => (\r\n                        <Row className='mt-5'>\r\n                            <Col xs={3}>\r\n                                <Image src={`http://127.0.0.1:8000${product.image}`} className='cart-product-img'></Image>\r\n                            </Col>\r\n\r\n                            <Col xs={9}>\r\n                                <Row>\r\n                                    <h2>{product.name}</h2>\r\n                                </Row>\r\n\r\n                                <Row className='mt-3 cart-price-text'>\r\n                                    <Col>\r\n                                        Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${product.price}\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className='mt-1'>\r\n                                    <p>{product.countInStock > 0 ? \"In Stock\": \"Out of stock\"}</p>\r\n                                </Row>\r\n\r\n                                <Row className='mt-1'>\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle variant='outline-dark'>\r\n                                            Quantity\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item>1</Dropdown.Item>\r\n                                            <Dropdown.Item>2</Dropdown.Item>\r\n                                            <Dropdown.Item>3</Dropdown.Item>\r\n                                            <Dropdown.Item>4</Dropdown.Item>\r\n                                            <Dropdown.Item>5</Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Row>\r\n                            </Col>\r\n\r\n                    </Row>\r\n                    ))}  \r\n                </Col>\r\n*/","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\screens\\ProductPage.js",["94","95","96","97","98"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, Button, Container, Row, Col, Image, Dropdown, ListGroup, Form } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport './ProductPage.css';\r\nimport { listProductDetails } from '../actions/productActions';\r\nimport axios from 'axios';\r\n\r\n\r\nexport function ProductPage({ match, history }) {\r\n    const [qty, setQty] = useState(1);\r\n    \r\n    const pk = match.params.id;\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(pk))\r\n\r\n    }, [dispatch, match]);\r\n\r\n/*\r\n    const addToCartHandler = () => {\r\n        axios.post('http://127.0.0.1:8000/api/add_product_to_order/', {\r\n            id: product._id,\r\n            qty: qty\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n        });\r\n    }\r\n*/\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='mt-5 product-display-container'>\r\n\r\n            <Button variant='outline-success' href='/'>Back</Button>\r\n\r\n            {loading ? <Loader /> :\r\n                error ? <Message error={error}></Message> \r\n                :\r\n                <Row className='product-display'>\r\n                <Col xs={4}>\r\n                    <Image className='product-img' src={`http://127.0.0.1:8000${product.image}`} rounded/>\r\n                </Col>\r\n\r\n                <Col xs={4} className='product-info'>\r\n                    <Row>\r\n                        <h2>{product.name}</h2>\r\n                    </Row>\r\n                    \r\n                    <Row>\r\n                        <div className='my-3'>\r\n                            {product.rating} from {product.numReviews} reviews\r\n                        </div>\r\n                    </Row>\r\n                    \r\n                    <Row>\r\n                        <h1>${product.price}</h1>\r\n                    </Row>\r\n                    \r\n                    <Row>\r\n                        <p>{product.description}</p>\r\n                    </Row>\r\n\r\n                </Col>\r\n\r\n                <Col xs={3}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <h1>Subtotal</h1>\r\n                            </Row>\r\n\r\n                            <Row className='qty-text mt-4'>\r\n                                <Col xs={4}>\r\n                                    Qty:\r\n                                </Col>\r\n\r\n                                <Col xs={8}>\r\n                                    <Form.Control\r\n                                        id=\"qty-field\"\r\n                                        as=\"select\"\r\n                                        value={qty}\r\n                                        onChange={(e) => setQty(e.target.value)}\r\n                                    >\r\n                                        {\r\n                                            [...Array(product.countInStock).keys()].map((x) => (\r\n                                                    <option key={x+1} value={x+1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className='price-text mt-2'>\r\n                                <Col xs={2}>\r\n                                    Price: \r\n                                </Col>\r\n\r\n                                <Col xs={10}>\r\n                                    ${product.price}\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                variant='dark' \r\n                                size='lg' \r\n                                className='w-100'\r\n                                disabled={product.countInStock === 0}\r\n//                                 href='/cart'\r\n                                onClick={addToCartHandler}\r\n                                >Add to Cart</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>   \r\n                </Col>\r\n\r\n            </Row>\r\n            }\r\n            \r\n            \r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n<Card>\r\n                        <Card.Title class='subtotal-text'>Subtotal</Card.Title>\r\n                        <Card.Body>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle variant='outline-dark'>\r\n                                    Quantity\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item>1</Dropdown.Item>\r\n                                    <Dropdown.Item>2</Dropdown.Item>\r\n                                    <Dropdown.Item>3</Dropdown.Item>\r\n                                    <Dropdown.Item>4</Dropdown.Item>\r\n                                    <Dropdown.Item>5</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Card.Body>\r\n\r\n                        <Card.Body>\r\n                            <Button variant='dark'>Add to Cart</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n*/","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\screens\\LoginPage.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\screens\\HomePage.js",["99","100","101","102"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Carousel, Container, Row, Col, Spinner, Alert } from 'react-bootstrap';\r\nimport './HomePage.css';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nimport { listProducts } from '../actions/productActions';\r\n\r\n\r\nexport function HomePage() {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products} = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Carousel className='slide-header'>\r\n                <Carousel.Item className='carousel-slide'>\r\n                    <img\r\n                        className=\"d-block w-100 h-100\"\r\n                        src=\"../images/slide-1.jpg\"\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption className='slide-caption'>\r\n                        <h1>Eat Healthy</h1>\r\n                        <p>Track your intake calories, fat, carb and protein. Perfect accuracy at the cheapest price</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className='carousel-slide'>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"../images/slide-2.jpg\"\r\n                        alt=\"Second slide\"\r\n                    />\r\n                    \r\n                    <Carousel.Caption className='slide-caption'>\r\n                        <h1>Daily exercies</h1>\r\n                        <p>Provide you with top brand equipment to help you have the best experience exercising</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item className='carousel-slide'>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"../images/slide-3.jpg\"\r\n                        alt=\"Third slide\"\r\n                    />                \r\n                    <Carousel.Caption className='slide-caption'>\r\n                        <h1>Provide you a healthy lifestyle</h1>\r\n                        <p>Track everything you need for a healthy lifestyle, including heart rate, amount of quality sleep, etc</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n            \r\n            {loading ? <Loader/>\r\n                : error ? <Message error={error}/>\r\n                    : \r\n                    <Row>\r\n                    {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product}></Product>\r\n                            </Col>\r\n                    ))}\r\n                    </Row>   \r\n            }\r\n\r\n            \r\n       </div>\r\n    )\r\n}","C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\reducers\\productReducers.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\reducers\\cartReducers.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\product.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Message.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Loader.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\components\\Product.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\actions\\productActions.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\actions\\cartActions.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\constants\\cartConstants.js",[],"C:\\Minh\\Programming projects\\ArchHealthy Django-React\\ArchHealthy\\src\\constants\\productConstants.js",[],{"ruleId":"103","severity":1,"message":"104","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":1,"column":57,"nodeType":"105","messageId":"106","endLine":1,"endColumn":64},{"ruleId":"103","severity":1,"message":"108","line":2,"column":39,"nodeType":"105","messageId":"106","endLine":2,"endColumn":42},{"ruleId":"103","severity":1,"message":"109","line":2,"column":44,"nodeType":"105","messageId":"106","endLine":2,"endColumn":55},{"ruleId":"103","severity":1,"message":"110","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":24},{"ruleId":"103","severity":1,"message":"111","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":16},{"ruleId":"103","severity":1,"message":"112","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":3,"column":24,"nodeType":"105","messageId":"106","endLine":3,"endColumn":33},{"ruleId":"103","severity":1,"message":"113","line":3,"column":52,"nodeType":"105","messageId":"106","endLine":3,"endColumn":60},{"ruleId":"103","severity":1,"message":"114","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":22,"column":8,"nodeType":"117","endLine":22,"endColumn":25,"suggestions":"118"},{"ruleId":"103","severity":1,"message":"110","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":3,"column":20,"nodeType":"105","messageId":"106","endLine":3,"endColumn":29},{"ruleId":"103","severity":1,"message":"119","line":3,"column":41,"nodeType":"105","messageId":"106","endLine":3,"endColumn":48},{"ruleId":"103","severity":1,"message":"120","line":3,"column":50,"nodeType":"105","messageId":"106","endLine":3,"endColumn":55},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'Row' is defined but never used.","'NavDropdown' is defined but never used.","'useState' is defined but never used.","'products' is defined but never used.","'Card' is defined but never used.","'Dropdown' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pk'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'Spinner' is defined but never used.","'Alert' is defined but never used.",{"desc":"122","fix":"123"},"Update the dependencies array to be: [dispatch, match, pk]",{"range":"124","text":"125"},[795,812],"[dispatch, match, pk]"]